<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <connectionStrings>
    <add name="ActiveDirectory" connectionString="LDAP://127.0.0.1" providerName="" />
    <add name="MySecurity" connectionString="Data Source=(local);Initial Catalog=MySecurity;Integrated Security=SSPI" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <system.diagnostics>
    <!--default list of listeners for new sources not listed below-->
    <trace autoflush="false" indentsize="4">
      <listeners></listeners>
    </trace>
    <switches>
      <!-- Switch value choices: Off Error Warning Information Verbose All -->
      <add name="Group1" value="Warning" />
    </switches>
    <sources>
      <!-- switchValue Choices: Off Error Warning Information Verbose All -->
      <!-- TRACE, CONSOLE, and FIRSTCHANCE are either on or off: To turn on: TRACE=Verbose, CONSOLE=Information, FirstChance=Error -->
      <source name="TRACE" switchValue="All">
        <listeners>
          <clear />
          <add name="DebugListener" />
        </listeners>
      </source>
      <source name="CONSOLE" switchValue="All">
        <listeners>
          <clear />
          <add name="DebugListener" />
        </listeners>
      </source>
      <source name="FIRSTCHANCE" switchValue="All">
        <listeners>
          <clear />
          <add name="DebugListener" />
        </listeners>
      </source>
      <source name="General" switchValue="Error">
        <listeners>
          <clear />
          <add name="CsvFileListener" />
        </listeners>
      </source>
      <source name="MySource" switchName="Group1">
        <listeners>
          <clear />
          <add name="FormattedFileListener" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <!--EventLog initializeData parameters and their defaults (case-insensitive):
      Async=true - lazily write messages to output destination
      Log=(no default) - EventLog log to write to. If undefined EventLog logging disabled.
      Source=(no default) - EventLog source to write to. If undefined EventLog logging disabled.
      -->
      <add name="EventLogListener" type="ChuckHill2.EventLogTraceListener, ChuckHill2.Utilities" initializeData="Log=Application;Source=LoggerDemo">
        <!--MultiSourceFilter initializeData parameters and their defaults (case-insensitive): Comma-delimited list of sources to ignore -->
        <filter type="ChuckHill.MultiSourceFilter, ChuckHill2.Utilities" initializeData="Boogers,xxoo,zzz" />
      </add>
      <!--Debug initializeData parameters and their defaults (case-insensitive):
      SqueezeMsg=false - squeeze multi-line message and extra whitespace into a single line.
      Async=true - lazily write messages to output destination
      -->
      <add name="DebugListener" type="ChuckHill2.DebugTraceListener, ChuckHill2.Utilities" />
      <!--FormattedFile initializeData parameters and their defaults (case-insensitive):
      SqueezeMsg=false - squeeze multi-line message and extra whitespace into a single line.
      Async=true - lazily write messages to output destination. False will incur performance penalties.
      Filename=DEFAULT - same as appname with a ".log" extension OR relative or full filepath which may contain environment variables including pseudo-environment variables: ProcessName, ProcessId(as 4 hex digits), and AppDomainName. DateTime in filename is not supported.
      MaxSize=104857600 (100MB) - max file size before starting over with a new file.
      MaxFiles=-1 (infinite) - Maximum number of log files before deleting the oldest.
      Format=CSV - string.Format format specifier with arguments. See String.Format().
      Possible format arguments are:
          Guid ActivityId             string FullMessage              string SourceName
          string CallStack            string LogicalOperationStack    int    ThreadId
          DateTime DateTime           int    ProcessId                string ThreadName
          string DomainName           string ProcessName              long   Timestamp
          string EntryAssemblyName    enum TraceEventType Severity    string UserMessage
          string ExceptionMessage     int    SourceId
      -->
      <add name="CsvFileListener" type="ChuckHill2.FileTraceListener, ChuckHill2.Utilities" />
      <add name="FormattedFileListener" type="ChuckHill2.FileTraceListener, ChuckHill2.Utilities" initializeData="Format={LocalDateTime:yyyy-MM-ddTHH:mm:ss.fff} Severity: {Severity}, Source: {SourceName}\r\nMessage: {UserMessage}\r\nException: {ExceptionOrCallStack}};Filename=MyLog.log" />
    </sharedListeners>
  </system.diagnostics>
  <system.net>
    <mailSettings>
      <smtp deliveryMethod="Network" from="ben@contoso.com">
        <network clientDomain="www.contoso.com" defaultCredentials="true" enableSsl="false" host="mail.contoso.com" port="25" userName="MyMailServerUsername" password="MyMailServerPassword" />
      </smtp>
    </mailSettings>
  </system.net>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
</configuration>